[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "axiom-mcp"
version = "0.1.3"
authors = [
  { name = "Viraj Shah", email = "viraj.shah1503@gmail.com" },
]
description = "ðŸš€ MCP framework that unlocks truly scalable AI systems with zero friction"
readme = "README.md"
requires-python = ">=3.12,<3.13"
keywords = ["ai", "mcp", "model-context-protocol", "llm", "machine-learning", "axiom"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "mcp>=1.0.0,<2.0.0",
    "pydantic-settings>=2.6.1",
    "pydantic>=2.5.3,<3.0.0",
    "typer>=0.9.0",
    "python-dotenv>=1.0.1",
    "aiofiles>=23.2.1",
    "aiohttp>=3.8.0",
    "cachetools>=5.3.2",
    "aiosqlite>=0.21.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "watchdog>=6.0.0",
    "jsonschema>=4.23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0",
    "pytest-asyncio>=0.25.3",
    "rich>=13.9.4",
    "watchdog==6.0.0",
    "build>=1.2.2.post1",
    "twine>=6.1.0",
]

db = [
    "asyncpg>=0.29.0",  # PostgreSQL support
    "aioredis>=2.0.1",  # Redis support
    "msgpack>=1.0.7"    # Efficient serialization
]

telemetry = [
    "opentelemetry-instrumentation>=0.42b0",
    "prometheus-client>=0.19.0"
]

validation = [
    "pydantic[email]>=2.5.3"
]

[project.scripts]
axiom-mcp = "axiom_mcp.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/axiom_mcp"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
select = ["E", "F", "B", "I"]
line-length = 88
target-version = ["py310", "py311", "py312"]
fix = true

[tool.ruff.isort]
known-first-party = ["axiom_mcp"]
combine-as-imports = true
force-wrap-aliases = true
profile = "black"

[tool.pytest.ini_options]
addopts = "--asyncio-mode=auto"
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
